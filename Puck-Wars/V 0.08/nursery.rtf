{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red63\green127\blue95;\red204\green122\blue122;\red127\green0\blue85;
\red204\green176\blue122;\red42\green0\blue255;\red122\green204\blue122;\red122\green204\blue176;\red122\green176\blue204;
\red122\green122\blue204;\red63\green95\blue191;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\fs22 \cf2 ;; Definitions for nursery agents.\cf0 \
\
\pard\pardeftab720
\cf3 (\cf4 ns\cf0  pucks.agents.nursery\
  \cf5 (\cf6 :use\cf0  quil.core \
        [pucks globals util vec2D]\
        pucks.agents.generic\cf5 )\cf3 )\cf0 \
\
\cf3 (\cf4 defn\cf0  draw-nursery [p]\
  \cf5 (\cf4 let\cf0  [[x y] \cf7 (\cf6 :position\cf0  p\cf7 )\cf0 \
        radius \cf7 (\cf6 :radius\cf0  p\cf7 )\cf0 \
        [r g b] \cf7 (\cf6 :color\cf0  p\cf7 )\cf0 ]\
    \cf7 (\cf4 push-matrix\cf7 )\cf0 \
    \cf7 (\cf4 translate\cf0  x y\cf7 )\cf0 \
    \cf7 (\cf4 rotate\cf0  \cf8 (\cf6 :rotation\cf0  p\cf8 )\cf7 )\cf0 \
    \cf2 ;; membrane\cf0 \
    \cf7 (\cf4 fill\cf0  r g b 100\cf7 )\cf0 \
    \cf7 (\cf4 ellipse\cf0  0 0 \cf8 (\cf4 *\cf0  radius 2\cf8 )\cf0  \cf8 (\cf4 *\cf0  radius 2\cf8 )\cf7 )\cf0 \
    \cf2 ;; core\cf0 \
    \cf7 (\cf4 ellipse\cf0  0 0 radius radius\cf7 )\cf0 \
    \cf7 (\cf4 fill\cf0  32 32 32 196\cf7 )\cf0 \
    \cf7 (\cf4 when\cf0  \cf8 (\cf4 >=\cf0  @number-of-active-agents \cf9 (\cf6 :nursery-threshold\cf0  @pucks-settings\cf9 )\cf8 )\cf0 \
      \cf8 (\cf4 ellipse\cf0  0 0 \cf9 (\cf4 *\cf0  0.8 radius\cf9 )\cf0  \cf9 (\cf4 *\cf0  0.8 radius\cf9 )\cf8 )\cf7 )\cf0 \
    \cf7 (\cf4 pop-matrix\cf7 )\cf5 )\cf3 )\cf0 \
\
\cf3 (\cf4 defn\cf0  nursery-proposals [p]\
  \cf5 (\cf4 if\cf0  \cf7 (\cf4 and\cf0  \cf8 (\cf4 <\cf0  @number-of-active-agents \cf9 (\cf6 :nursery-threshold\cf0  @pucks-settings\cf9 )\cf8 )\cf0 \
           \cf8 (\cf4 =\cf0  \cf9 (\cf4 mod\cf0  \cf10 (\cf6 :steps\cf0  p\cf10 )\cf0  100\cf9 )\cf0  0\cf8 )\cf7 )\cf0 \
    \{\cf6 :spawn\cf0  [\cf7 (\cf4 assoc\cf0  \cf8 (\cf9 (\cf6 :spawn-function\cf0  p\cf9 )\cf8 )\cf0 \
                    \cf2 ;; position will be relative to position of parent\cf0 \
                    \cf6 :position\cf0  [\cf8 (\cf4 -\cf0  \cf9 (\cf4 rand-int\cf0  3\cf9 )\cf0  1\cf8 )\cf0  \cf8 (\cf4 -\cf0  \cf9 (\cf4 rand-int\cf0  3\cf9 )\cf0  1\cf8 )\cf0 ]\cf7 )\cf0 ]\}\
    \{\}\cf5 )\cf3 )\cf0 \
\
\pard\pardeftab720
\cf2 ;; The nursery function, which creates a nursery agent, must be called with \cf0 \
\cf2 ;; a spawn function argument, which will be called to produce child agents.\cf0 \
\
\pard\pardeftab720
\cf3 (\cf4 defn\cf0  nursery [spawn-function]\
  \cf5 (\cf4 merge\cf0  \cf7 (\cf4 generic\cf7 )\cf0 \
         \{\cf6 :nursery\cf0  \cf11 true\cf0 \
          \cf6 :radius\cf0  50\
          \cf6 :draw-function\cf0  draw-nursery\
          \cf6 :color\cf0  [139 0 0]\
          \cf6 :proposal-function\cf0  nursery-proposals\
          \cf6 :spawn-function\cf0  spawn-function\}\cf5 )\cf3 )\cf0 \
}