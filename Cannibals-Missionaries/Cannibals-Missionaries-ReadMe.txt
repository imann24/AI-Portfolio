Cannibals and Missionaries is a classic logic problem. It begins with three missionaries, three cannibals, and a rowboat on the wrong side of a river bank. All three of both parties must be ferried across. Either one or two people are allowed in the boat at a time. There may never be more cannibals than missionaries on either bank, or the cannibals will eat the missionaries. 

The logic problem is solved in this case using a search algorithm. The search algorithm is written by Lee Spector. The portion of the code that is being shown off in my portfolio is the two fitness functions. The first, called “valid-moves,” I wrote myself. It can be run using the (old-bank-breadth) or the (old-bank-depth) search function calls. The only notable difference between breadth and depth is that one uses concatenate and the other reverse concatenate to organize the frontier. 

The same difference is true for the (bank-breath) and (bank-depth) functions calls. These use a fitness function written by myself and Grusha Prasad, called “frontiers.” The difference in this fitness function is that it contains the rules of the problem, rather than a case statement containing the valid moves. It uses conditionals to prune out any invalid move from a given state. 

The two functions are roughly equivalent efficiency-wise, but the “frontiers” function is more advanced programatically. In terms of division of labor, Grusha and I worked in close collaboration. We began by discussing the problem and my prior solution. Grusha headed up the idea to implement a fitness function that was more based in rules rather than explicit moves, and I implemented a good deal of the code. However, nearly all of it was written with the two of us working on the same machine in tandem.